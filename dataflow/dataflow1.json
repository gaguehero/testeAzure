{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "MovieADLS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "groupbyGenero"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MovieADLS",
				"MovieADLS select(mapColumn(",
				"          Id = movieId,",
				"          Titulo = title,",
				"          Genero = genres",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(Ano = trim(split(Titulo,'(')[size(split(Titulo,'('))],')'),",
				"          Titulo = split(Titulo,'(')[1]) ~> derivedColumn1",
				"derivedColumn1 filter(toInteger(Ano)==1996) ~> filter1",
				"filter1 derive(PrimaryGenre = iif(locate('|',Genero)>1, left(Genero, locate('|',Genero)-1), Genero)) ~> derivedColumn2",
				"derivedColumn2 aggregate(groupBy(PrimaryGenre),",
				"     CountGenero = count()) ~> groupbyGenero",
				"groupbyGenero alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}